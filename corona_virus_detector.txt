import pandas as pd

df = pd.read_csv('data.csv')

df.describe()

df.head()

df.tail()

df.info()

df['Difficulty in breathing'].value_counts()

#Train and Test splitting
import numpy as np

def data_split(data, ratio):
  shuffled = np.random.permutation(len(data))
  test_set_size = int(len(data) * ratio)
  test_indices = shuffled[:test_set_size]
  train_indices = shuffled[test_set_size:]
  return data.iloc[train_indices], data.iloc[test_indices]

np.random.permutation(7)

train, test = data_split(df, 0.2)

train

test

x_train = train[['Fever', 'Body pain', 'Age', 'Runny Nose', 'Difficulty in breathing']].to_numpy()
x_test = test[['Fever', 'Body pain', 'Age', 'Runny Nose', 'Difficulty in breathing']].to_numpy()

y_train = train[['Infection Probability']].to_numpy().reshape(2400,)
y_test = test[['Infection Probability']].to_numpy().reshape(600,)

y_train

from sklearn.linear_model import LogisticRegression

clf = LogisticRegression()
clf.fit(x_train, y_train)

inputfeatures = [100,1,22,1,1]
#Infectionprobability = clf.predict([inputfeatures])

Infectionprobability = clf.predict_proba([inputfeatures])[0][1]

Infectionprobability

if(Infectionprobability>=0.5):
  print("Corona Detected")
else:
  print("Corona Not Detected")

